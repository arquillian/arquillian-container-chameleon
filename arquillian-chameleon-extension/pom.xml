<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>arquillian-container-chameleon-parent</artifactId>
    <groupId>org.arquillian.container</groupId>
    <version>1.0.0.Final-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>arquillian-container-chameleon</artifactId>

  <name>Arquillian Container Chameleon</name>
  <description>Chameleon container that dynamically loads correct container adapter versions</description>

  <dependencies>
    <dependency>
      <groupId>org.arquillian.container</groupId>
      <artifactId>arquillian-chameleon-container-model</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.yaml</groupId>
          <artifactId>snakeyaml</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency> <!-- 'illegal' dependency -->
      <groupId>org.jboss.arquillian.config</groupId>
      <artifactId>arquillian-config-impl-base</artifactId>
    </dependency>
    <dependency> <!-- 'illegal' dependency -->
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-impl-base</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-spi</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.testenricher</groupId>
      <artifactId>arquillian-testenricher-ejb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.testenricher</groupId>
      <artifactId>arquillian-testenricher-resource</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.testenricher</groupId>
      <artifactId>arquillian-testenricher-cdi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.testenricher</groupId>
      <artifactId>arquillian-testenricher-initialcontext</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-depchain</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.arquillian.spacelift</groupId>
      <artifactId>arquillian-spacelift</artifactId>
      <version>${version.arquillian-spacelift}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
      <version>${version.jcip.annotations}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <version>${version.jboss.javaee-6_api}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>all</id>

      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>

            <executions>
              <execution>
                <id>wf10.1</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:10.1.0.Final:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf10</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:10.0.0.Final:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf9</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:9.0.0.Final:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf82</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:8.2.0.Final:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf81</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:8.1.0.Final:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf8</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:8.0.0.Final:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf-custom</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly-custom:9.0.0.CR1:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                    <arq.container.chameleon.configuration.chameleonContainerConfigurationFile>custom/containers.yaml
                    </arq.container.chameleon.configuration.chameleonContainerConfigurationFile>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf9-remote</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arquillian.launch>remoteTest</arquillian.launch>
                    <arq.container.managed.configuration.chameleonTarget>wildfly:9.0.0.Final:managed
                    </arq.container.managed.configuration.chameleonTarget>
                    <arq.container.remote.configuration.chameleonTarget>wildfly:9.0.0.Final:remote
                    </arq.container.remote.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf10-remote</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arquillian.launch>remoteTest</arquillian.launch>
                    <arq.container.managed.configuration.chameleonTarget>wildfly:10.0.0.Beta2:managed
                    </arq.container.managed.configuration.chameleonTarget>
                    <arq.container.remote.configuration.chameleonTarget>wildfly:10.0.0.Beta2:remote
                    </arq.container.remote.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>gf4</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>glassfish:4.0:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>gf41-managed</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>glassfish:4.1:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>gf50-managed</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>glassfish:5.0:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <!-- Payara -->
              <execution>
                <id>payara41-managed</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>payara:4.1.1.162:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>wf10-domain</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>DomainDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly domain:10.0.0.Final:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <!-- WF embedded -->
              <execution>
                <id>wf8-embedded</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:8.0.0.Final:embedded
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                  <systemProperties>
                    <property>
                      <name>java.util.logging.manager</name>
                      <value>org.jboss.logmanager.LogManager</value>
                    </property>
                  </systemProperties>
                </configuration>
              </execution>
              <execution>
                <id>wf9-embedded</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:9.0.0.Final:embedded
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                  <systemProperties>
                    <property>
                      <name>java.util.logging.manager</name>
                      <value>org.jboss.logmanager.LogManager</value>
                    </property>
                  </systemProperties>
                </configuration>
              </execution>
              <execution>
                <id>wf10-embedded</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>wildfly:10.0.0.Final:embedded
                    </arq.container.chameleon.configuration.chameleonTarget>
                  </systemPropertyVariables>
                  <systemProperties>
                    <property>
                      <name>java.util.logging.manager</name>
                      <value>org.jboss.logmanager.LogManager</value>
                    </property>
                  </systemProperties>
                </configuration>
              </execution>
              <!-- Tomcat 7 -->
              <execution>
                <id>tomcat6-managed</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>tomcat:6.0.39:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                    <arquillian.launch>tomcat6-managed</arquillian.launch>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <!-- Tomcat 7 -->
              <execution>
                <id>tomcat7-managed</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>tomcat:7.0.73:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                    <arquillian.launch>tomcat7-managed</arquillian.launch>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <!-- Tomcat 8 -->
              <execution>
                <id>tomcat8-managed</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <test>SimpleDeploymentTestCase</test>
                  <systemPropertyVariables>
                    <arq.container.chameleon.configuration.chameleonTarget>tomcat:8.0.39:managed
                    </arq.container.chameleon.configuration.chameleonTarget>
                    <arquillian.launch>tomcat8-managed</arquillian.launch>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.jboss.logmanager</groupId>
          <artifactId>jboss-logmanager</artifactId>
          <version>${version.jboss.logmanager}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>tck</id>
      <dependencies>
        <dependency>
          <groupId>org.arquillian.tck.container</groupId>
          <artifactId>arquillian-tck-container</artifactId>
          <version>${version.arquillian_tck}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
            <executions>
              <execution>
                <id>tck</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>org/arquillian/container/*/**</exclude>
                  </excludes>
                  <forkCount>1</forkCount>
                  <reuseForks>true</reuseForks>
                  <skip>false</skip>
                  <dependenciesToScan>
                    <dependency>org.arquillian.tck.container:arquillian-tck-container</dependency>
                  </dependenciesToScan>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
